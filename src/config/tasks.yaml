extract_curriculum_data:
  description: >
    Leia o arquivo de currículo fornecido via '{resume_path}'.
    IMPORTANTE: Você DEVE usar as ferramentas apropriadas para ler o arquivo:
    - Se o arquivo terminar com .tex, use EXCLUSIVAMENTE a ferramenta LatexReaderTool
    - Se o arquivo terminar com .pdf, use EXCLUSIVAMENTE a ferramenta PDFReaderTool
    NÃO invente ou crie informações fictícias. Leia APENAS o conteúdo real do arquivo fornecido.
    
    Extraia do arquivo real uma lista estruturada contendo:
    - Experiências profissionais (cargos, empresas, períodos, responsabilidades)
    - Habilidades técnicas e linguísticas
    - Formação acadêmica (cursos, instituições, anos)
    - Dados pessoais relevantes (nome, contato, LinkedIn, etc.)
    
    Após a extração do conteúdo REAL do arquivo, gere um relatório detalhado e salve-o como 'extract_curriculum_data_report.md'.
    As informações extraídas serão utilizadas para criar um novo currículo otimizado.
  expected_output: >
    Um dicionário estruturado com os dados REAIS extraídos do currículo (experiências, habilidades, educação).
    O contexto deve ser nomeado 'extract_curriculum_data' para a próxima tarefa.
    Os dados do candidato devem ser extraídos APENAS do arquivo fornecido, sem inventar informações.
    O arquivo deve conter informações detalhadas e verídicas para que sejam aperfeiçoadas nas etapas seguintes.
    Um arquivo extract_curriculum_data_report.md deve ser criado.
  agent: curriculum_reader
  inputs:
    resume_path: "{resume_path}"
    file_path: "{file_path}"
    query: "Extract professional experiences and academic background. For skills, search headings like 'Competências Técnicas', 'Competências Linguísticas' or 'Skills', and extract the items listed under these sections."
  output_file: reports/extract_curriculum_data_report.md

explain_curriculum_learning:
  description: >
    Com base no conteúdo extraído pelo PDFSearchTool e LatexReaderTool na tarefa 'extract_curriculum_data', explique o que foi aprendido usando cada ferramenta.
    Após a explicação, gere um relatório detalhado e salve-o como 'explain_curriculum_learning_report.md'.
  expected_output: >
    Um arquivo markdown com seções para PDFSearchTool e LatexReaderTool resumindo os insights extraídos.
    Um arquivo explain_curriculum_learning_report.md
  agent: curriculum_reader
  context:
    - extract_curriculum_data
  output_file: reports/explain_curriculum_learning_report.md

analyze_job_description:
  description: >
    ATENÇÃO: A descrição da vaga será fornecida diretamente via input 'job_description' da tarefa.
    NÃO use JobDescriptionTool nem tente ler arquivos. A informação já está disponível.
    
    PASSOS A SEGUIR:
    1. Use o conteúdo fornecido no input 'job_description' 
    2. Analise os requisitos técnicos, experiências e palavras-chave
    3. Identifique: competências-chave, tecnologias, tipo de cargo
    4. Crie um relatório markdown com sua análise
    5. Salve usando File Writer Tool:
       - filename: "analyze_job_description_report.md"
       - content: [seu relatório completo em texto markdown]
       - directory: "reports"
       - overwrite: "true"
    
    IMPORTANTE: NÃO use outras ferramentas além do File Writer Tool.
    O input job_description já contém todas as informações necessárias.
  expected_output: >
    Um resumo em tópicos destacando os requisitos principais e aspectos a enfatizar no currículo.
    Inclua: tipo de cargo, tecnologias exigidas, experiências valorizadas, skills técnicas e comportamentais.
    Um arquivo analyze_job_description_report.md deve ser criado usando File Writer Tool.
  agent: job_analyzer
  inputs:
    job_description: "{job_description}"
  output_file: reports/analyze_job_description_report.md

# Novas Tarefas para Análise Semântica
embed_curriculum:
  description: >
    Recebe o texto estruturado do currículo extraído pela tarefa 'extract_curriculum_data'.
    Utiliza a 'Text Embedding Tool' para gerar um vetor semântico (embedding) para o conteúdo do currículo.
  expected_output: >
    Uma lista de floats representando o embedding do currículo.
    Este output será usado como contexto para a tarefa 'analyze_similarity'.
  agent: alignment_analyzer
  context:
    - extract_curriculum_data
  output_file: reports/embed_curriculum_report.md

embed_job_description:
  description: >
    Recebe o texto da descrição da vaga analisado pela tarefa 'analyze_job_description'.
    Utiliza a 'Text Embedding Tool' para gerar um vetor semântico (embedding) para o conteúdo da descrição da vaga.
  expected_output: >
    Uma lista de floats representando o embedding da descrição da vaga.
    Este output será usado como contexto para a tarefa 'analyze_similarity'.
  agent: alignment_analyzer
  context:
    - analyze_job_description
  output_file: reports/embed_job_description_report.md

analyze_similarity:
  description: >
    Analise a similaridade semântica entre o currículo e a descrição da vaga usando os embeddings gerados pelas tarefas anteriores.
    
    IMPORTANTE: Os embeddings estão disponíveis nos arquivos 'embed_curriculum_report.md' e 'embed_job_description_report.md'.
    
    Passos a executar:
    1. Use a ferramenta 'Semantic Similarity Tool' para calcular a similaridade de cosseno entre os embeddings dos arquivos:
       - Primeiro parâmetro: 'embed_curriculum_report.md'
       - Segundo parâmetro: 'embed_job_description_report.md'
    2. Interprete o score de similaridade:
       - Score >= 0.8: Alto Alinhamento
       - Score 0.6-0.79: Alinhamento Moderado-Alto
       - Score 0.4-0.59: Alinhamento Moderado
       - Score 0.2-0.39: Alinhamento Baixo-Moderado
       - Score < 0.2: Baixo Alinhamento
    3. Com base no score e nos conteúdos analisados das tarefas anteriores (currículo e descrição da vaga), identifique:
       - Principais pontos fortes (áreas onde há alta correspondência)
       - Principais pontos a desenvolver/estudar (áreas onde há baixa correspondência)
    4. Gere um relatório detalhado em markdown.
    
    EXEMPLO DE USO DA FERRAMENTA:
    Use a ferramenta assim: Semantic Similarity Tool com parâmetros:
    - embedding1: embed_curriculum_report.md
    - embedding2: embed_job_description_report.md
  expected_output: >
    Um relatório em markdown ('similarity_analysis_report.md') contendo:
    - O score de similaridade (valor numérico)
    - Uma interpretação clara do score (ex: 'Alto Alinhamento')
    - Lista detalhada de pontos fortes identificados
    - Lista detalhada de pontos a desenvolver/estudar
    - Recomendações específicas para melhoria do alinhamento
    Este relatório será usado como contexto para as tarefas 'adjust_resume_for_job' e 'generate_report'.
  agent: alignment_analyzer
  context:
    - embed_curriculum
    - embed_job_description
  output_file: reports/similarity_analysis_report.md

adjust_resume_for_job:
  description: >
    Usando os dados estruturados do currículo da tarefa 'extract_curriculum_data', o resumo da análise do trabalho da tarefa 'analyze_job_description', E o relatório de similaridade da tarefa 'analyze_similarity' como contexto, reescreva e reorganize seções do conteúdo original do currículo para melhorar o alinhamento com o trabalho alvo.
    Concentre-se em destacar habilidades e experiências relevantes com base *apenas* no conteúdo do currículo fornecido. Não invente novas informações ou experiências.
    Após o ajuste, gere um relatório detalhado e salve-o como 'adjust_resume_for_job_report.md'.
    Siga estas diretrizes:
    - Enfatize conteúdo relevante para o trabalho para melhorar a pontuação ATS. Evite gráficos complexos, a menos que solicitado.
    - Priorize habilidades e qualificações sobre dados pessoais.
    - Organize as informações estrategicamente para facilitar a leitura.
    - Defina o campo Objetivo para: "Atuar como [cargo]" (onde [cargo] é inferido da descrição do trabalho).
    - Certifique-se de que o conteúdo final do currículo seja conciso, idealmente cabendo em duas páginas quando compilado.
  expected_output: >
    O conteúdo completo e modificado do currículo como um único bloco de código LaTeX, salvo em um arquivo `.tex`.
    Um arquivo adjust_resume_for_job_report.md
  agent: resume_editor
  context: # Adicionado analyze_similarity ao contexto
    - extract_curriculum_data
    - analyze_job_description
    - analyze_similarity
  output_file: reports/adjust_resume_for_job_report.md

generate_report:
  description: >
    Compile um relatório detalhado documentando a execução de cada tarefa anterior (
      'extract_curriculum_data', 
      'analyze_job_description', 
      'embed_curriculum', 
      'embed_job_description', 
      'analyze_similarity', 
      'adjust_resume_for_job'
    ).
    Para cada tarefa, inclua:
    - O agente responsável.
    - O objetivo da tarefa.
    - Um resumo dos resultados ou saídas geradas.
    - Quaisquer observações ou desafios encontrados durante a execução (se disponíveis no contexto).
    Após a compilação, gere um relatório detalhado e salve-o como 'generate_report_report.md'.
  expected_output: >
    Um arquivo markdown (`execution_report.md`) contendo o relatório estruturado da execução da equipe.
    Um arquivo generate_report_report.md
  agent: reporting_agent
  output_file: reports/execution_report.md
